//
// AuthAuthorizationAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

open class AuthAuthorizationAPI {

    /**
     Check HTTP Authorization
     
     - parameter checkHTTPAuthorizationRequest: (body)  (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func checkHTTPAuthorization(checkHTTPAuthorizationRequest: CheckHTTPAuthorizationRequest? = nil, apiResponseQueue: DispatchQueue = intdashAPI.apiResponseQueue, completion: @escaping ((_ data: CheckAuthorizationResponse?, _ error: Error?) -> Void)) {
        checkHTTPAuthorizationWithRequestBuilder(checkHTTPAuthorizationRequest: checkHTTPAuthorizationRequest).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Check HTTP Authorization
     - POST /auth/authorize/http
     - parameter checkHTTPAuthorizationRequest: (body)  (optional)
     - returns: RequestBuilder<CheckAuthorizationResponse> 
     */
    open class func checkHTTPAuthorizationWithRequestBuilder(checkHTTPAuthorizationRequest: CheckHTTPAuthorizationRequest? = nil) -> RequestBuilder<CheckAuthorizationResponse> {
        let localVariablePath = "/auth/authorize/http"
        let localVariableURLString = intdashAPI.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: checkHTTPAuthorizationRequest)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<CheckAuthorizationResponse>.Type = intdashAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "POST", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     Check Me HTTP Authorization
     
     - parameter checkMeHTTPAuthorizationRequest: (body)  (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func checkMeHTTPAuthorization(checkMeHTTPAuthorizationRequest: CheckMeHTTPAuthorizationRequest? = nil, apiResponseQueue: DispatchQueue = intdashAPI.apiResponseQueue, completion: @escaping ((_ data: CheckAuthorizationResponse?, _ error: Error?) -> Void)) {
        checkMeHTTPAuthorizationWithRequestBuilder(checkMeHTTPAuthorizationRequest: checkMeHTTPAuthorizationRequest).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Check Me HTTP Authorization
     - POST /auth/users/me/authorize/http
     - parameter checkMeHTTPAuthorizationRequest: (body)  (optional)
     - returns: RequestBuilder<CheckAuthorizationResponse> 
     */
    open class func checkMeHTTPAuthorizationWithRequestBuilder(checkMeHTTPAuthorizationRequest: CheckMeHTTPAuthorizationRequest? = nil) -> RequestBuilder<CheckAuthorizationResponse> {
        let localVariablePath = "/auth/users/me/authorize/http"
        let localVariableURLString = intdashAPI.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: checkMeHTTPAuthorizationRequest)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<CheckAuthorizationResponse>.Type = intdashAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "POST", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }
}
