//
// AuthEdgesAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

open class AuthEdgesAPI {

    /**
     Assign Owner
     
     - parameter edgeUuid: (path) エッジのUUID 
     - parameter assignOwnerRequest: (body)  (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func assignOwner(edgeUuid: String, assignOwnerRequest: AssignOwnerRequest? = nil, apiResponseQueue: DispatchQueue = intdashAPI.apiResponseQueue, completion: @escaping ((_ data: EdgeOwner?, _ error: Error?) -> Void)) {
        assignOwnerWithRequestBuilder(edgeUuid: edgeUuid, assignOwnerRequest: assignOwnerRequest).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Assign Owner
     - POST /auth/edges/{edge_uuid}/owner
     - エッジに所有者を割り当てます。
     - parameter edgeUuid: (path) エッジのUUID 
     - parameter assignOwnerRequest: (body)  (optional)
     - returns: RequestBuilder<EdgeOwner> 
     */
    open class func assignOwnerWithRequestBuilder(edgeUuid: String, assignOwnerRequest: AssignOwnerRequest? = nil) -> RequestBuilder<EdgeOwner> {
        var localVariablePath = "/auth/edges/{edge_uuid}/owner"
        let edgeUuidPreEscape = "\(APIHelper.mapValueToPathItem(edgeUuid))"
        let edgeUuidPostEscape = edgeUuidPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{edge_uuid}", with: edgeUuidPostEscape, options: .literal, range: nil)
        let localVariableURLString = intdashAPI.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: assignOwnerRequest)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<EdgeOwner>.Type = intdashAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "POST", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     Create Edge
     
     - parameter createEdgeRequest: (body)  (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func createEdge(createEdgeRequest: CreateEdgeRequest? = nil, apiResponseQueue: DispatchQueue = intdashAPI.apiResponseQueue, completion: @escaping ((_ data: Edge?, _ error: Error?) -> Void)) {
        createEdgeWithRequestBuilder(createEdgeRequest: createEdgeRequest).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Create Edge
     - POST /auth/edges
     - 所有者がない状態でエッジを作成します。
     - parameter createEdgeRequest: (body)  (optional)
     - returns: RequestBuilder<Edge> 
     */
    open class func createEdgeWithRequestBuilder(createEdgeRequest: CreateEdgeRequest? = nil) -> RequestBuilder<Edge> {
        let localVariablePath = "/auth/edges"
        let localVariableURLString = intdashAPI.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: createEdgeRequest)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<Edge>.Type = intdashAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "POST", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     Create My Edge
     
     - parameter createEdgeRequest: (body)  (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func createMyEdge(createEdgeRequest: CreateEdgeRequest? = nil, apiResponseQueue: DispatchQueue = intdashAPI.apiResponseQueue, completion: @escaping ((_ data: Edge?, _ error: Error?) -> Void)) {
        createMyEdgeWithRequestBuilder(createEdgeRequest: createEdgeRequest).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Create My Edge
     - POST /auth/users/me/edges
     - 新しいエッジを作成し、自分（ユーザー）を所有者に設定します。
     - parameter createEdgeRequest: (body)  (optional)
     - returns: RequestBuilder<Edge> 
     */
    open class func createMyEdgeWithRequestBuilder(createEdgeRequest: CreateEdgeRequest? = nil) -> RequestBuilder<Edge> {
        let localVariablePath = "/auth/users/me/edges"
        let localVariableURLString = intdashAPI.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: createEdgeRequest)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<Edge>.Type = intdashAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "POST", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     Create My Edge With UUID
     
     - parameter edgeUuid: (path) エッジのUUID 
     - parameter createEdgeRequest: (body)  (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func createMyEdgeWithUUID(edgeUuid: String, createEdgeRequest: CreateEdgeRequest? = nil, apiResponseQueue: DispatchQueue = intdashAPI.apiResponseQueue, completion: @escaping ((_ data: Edge?, _ error: Error?) -> Void)) {
        createMyEdgeWithUUIDWithRequestBuilder(edgeUuid: edgeUuid, createEdgeRequest: createEdgeRequest).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Create My Edge With UUID
     - PUT /auth/users/me/edges/{edge_uuid}
     - 指定したUUIDを持つ新しいエッジを作成し、自分を所有者に設定します。
     - parameter edgeUuid: (path) エッジのUUID 
     - parameter createEdgeRequest: (body)  (optional)
     - returns: RequestBuilder<Edge> 
     */
    open class func createMyEdgeWithUUIDWithRequestBuilder(edgeUuid: String, createEdgeRequest: CreateEdgeRequest? = nil) -> RequestBuilder<Edge> {
        var localVariablePath = "/auth/users/me/edges/{edge_uuid}"
        let edgeUuidPreEscape = "\(APIHelper.mapValueToPathItem(edgeUuid))"
        let edgeUuidPostEscape = edgeUuidPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{edge_uuid}", with: edgeUuidPostEscape, options: .literal, range: nil)
        let localVariableURLString = intdashAPI.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: createEdgeRequest)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<Edge>.Type = intdashAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "PUT", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     Create User's Edge
     
     - parameter userUuid: (path)  
     - parameter createEdgeRequest: (body)  (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func createUsersEdge(userUuid: String, createEdgeRequest: CreateEdgeRequest? = nil, apiResponseQueue: DispatchQueue = intdashAPI.apiResponseQueue, completion: @escaping ((_ data: Edge?, _ error: Error?) -> Void)) {
        createUsersEdgeWithRequestBuilder(userUuid: userUuid, createEdgeRequest: createEdgeRequest).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Create User's Edge
     - POST /auth/users/{user_uuid}/edges
     - 指定されたユーザーを所有者とするエッジを作成します。
     - parameter userUuid: (path)  
     - parameter createEdgeRequest: (body)  (optional)
     - returns: RequestBuilder<Edge> 
     */
    open class func createUsersEdgeWithRequestBuilder(userUuid: String, createEdgeRequest: CreateEdgeRequest? = nil) -> RequestBuilder<Edge> {
        var localVariablePath = "/auth/users/{user_uuid}/edges"
        let userUuidPreEscape = "\(APIHelper.mapValueToPathItem(userUuid))"
        let userUuidPostEscape = userUuidPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{user_uuid}", with: userUuidPostEscape, options: .literal, range: nil)
        let localVariableURLString = intdashAPI.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: createEdgeRequest)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<Edge>.Type = intdashAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "POST", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     Delete Edge
     
     - parameter edgeUuid: (path) エッジのUUID 
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func deleteEdge(edgeUuid: String, apiResponseQueue: DispatchQueue = intdashAPI.apiResponseQueue, completion: @escaping ((_ data: Void?, _ error: Error?) -> Void)) {
        deleteEdgeWithRequestBuilder(edgeUuid: edgeUuid).execute(apiResponseQueue) { result in
            switch result {
            case .success:
                completion((), nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Delete Edge
     - DELETE /auth/edges/{edge_uuid}
     - エッジを削除します。
     - parameter edgeUuid: (path) エッジのUUID 
     - returns: RequestBuilder<Void> 
     */
    open class func deleteEdgeWithRequestBuilder(edgeUuid: String) -> RequestBuilder<Void> {
        var localVariablePath = "/auth/edges/{edge_uuid}"
        let edgeUuidPreEscape = "\(APIHelper.mapValueToPathItem(edgeUuid))"
        let edgeUuidPostEscape = edgeUuidPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{edge_uuid}", with: edgeUuidPostEscape, options: .literal, range: nil)
        let localVariableURLString = intdashAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<Void>.Type = intdashAPI.requestBuilderFactory.getNonDecodableBuilder()

        return localVariableRequestBuilder.init(method: "DELETE", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     Delete My Edge
     
     - parameter edgeUuid: (path) エッジのUUID 
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func deleteMyEdge(edgeUuid: String, apiResponseQueue: DispatchQueue = intdashAPI.apiResponseQueue, completion: @escaping ((_ data: Void?, _ error: Error?) -> Void)) {
        deleteMyEdgeWithRequestBuilder(edgeUuid: edgeUuid).execute(apiResponseQueue) { result in
            switch result {
            case .success:
                completion((), nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Delete My Edge
     - DELETE /auth/users/me/edges/{edge_uuid}
     - 自分（ユーザー）が所有するエッジを削除します。
     - parameter edgeUuid: (path) エッジのUUID 
     - returns: RequestBuilder<Void> 
     */
    open class func deleteMyEdgeWithRequestBuilder(edgeUuid: String) -> RequestBuilder<Void> {
        var localVariablePath = "/auth/users/me/edges/{edge_uuid}"
        let edgeUuidPreEscape = "\(APIHelper.mapValueToPathItem(edgeUuid))"
        let edgeUuidPostEscape = edgeUuidPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{edge_uuid}", with: edgeUuidPostEscape, options: .literal, range: nil)
        let localVariableURLString = intdashAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<Void>.Type = intdashAPI.requestBuilderFactory.getNonDecodableBuilder()

        return localVariableRequestBuilder.init(method: "DELETE", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     Delete User's Edge
     
     - parameter userUuid: (path)  
     - parameter edgeUuid: (path) エッジのUUID 
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func deleteUsersEdge(userUuid: String, edgeUuid: String, apiResponseQueue: DispatchQueue = intdashAPI.apiResponseQueue, completion: @escaping ((_ data: Void?, _ error: Error?) -> Void)) {
        deleteUsersEdgeWithRequestBuilder(userUuid: userUuid, edgeUuid: edgeUuid).execute(apiResponseQueue) { result in
            switch result {
            case .success:
                completion((), nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Delete User's Edge
     - DELETE /auth/users/{user_uuid}/edges/{edge_uuid}
     - ユーザーが所有するエッジを削除します。
     - parameter userUuid: (path)  
     - parameter edgeUuid: (path) エッジのUUID 
     - returns: RequestBuilder<Void> 
     */
    open class func deleteUsersEdgeWithRequestBuilder(userUuid: String, edgeUuid: String) -> RequestBuilder<Void> {
        var localVariablePath = "/auth/users/{user_uuid}/edges/{edge_uuid}"
        let userUuidPreEscape = "\(APIHelper.mapValueToPathItem(userUuid))"
        let userUuidPostEscape = userUuidPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{user_uuid}", with: userUuidPostEscape, options: .literal, range: nil)
        let edgeUuidPreEscape = "\(APIHelper.mapValueToPathItem(edgeUuid))"
        let edgeUuidPostEscape = edgeUuidPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{edge_uuid}", with: edgeUuidPostEscape, options: .literal, range: nil)
        let localVariableURLString = intdashAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<Void>.Type = intdashAPI.requestBuilderFactory.getNonDecodableBuilder()

        return localVariableRequestBuilder.init(method: "DELETE", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     Get Edge
     
     - parameter edgeUuid: (path) エッジのUUID 
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getEdge(edgeUuid: String, apiResponseQueue: DispatchQueue = intdashAPI.apiResponseQueue, completion: @escaping ((_ data: Edge?, _ error: Error?) -> Void)) {
        getEdgeWithRequestBuilder(edgeUuid: edgeUuid).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Get Edge
     - GET /auth/edges/{edge_uuid}
     - エッジを取得します。
     - parameter edgeUuid: (path) エッジのUUID 
     - returns: RequestBuilder<Edge> 
     */
    open class func getEdgeWithRequestBuilder(edgeUuid: String) -> RequestBuilder<Edge> {
        var localVariablePath = "/auth/edges/{edge_uuid}"
        let edgeUuidPreEscape = "\(APIHelper.mapValueToPathItem(edgeUuid))"
        let edgeUuidPostEscape = edgeUuidPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{edge_uuid}", with: edgeUuidPostEscape, options: .literal, range: nil)
        let localVariableURLString = intdashAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<Edge>.Type = intdashAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     Get Edge having the same UUID as Me
     
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getMeAsEdge(apiResponseQueue: DispatchQueue = intdashAPI.apiResponseQueue, completion: @escaping ((_ data: Edge?, _ error: Error?) -> Void)) {
        getMeAsEdgeWithRequestBuilder().execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Get Edge having the same UUID as Me
     - GET /auth/edges/me
     - 自分のUUIDと同じエッジUUIDを持つエッジを取得します。
     - returns: RequestBuilder<Edge> 
     */
    open class func getMeAsEdgeWithRequestBuilder() -> RequestBuilder<Edge> {
        let localVariablePath = "/auth/edges/me"
        let localVariableURLString = intdashAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<Edge>.Type = intdashAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     Get My Edge
     
     - parameter edgeUuid: (path) エッジのUUID 
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getMyEdge(edgeUuid: String, apiResponseQueue: DispatchQueue = intdashAPI.apiResponseQueue, completion: @escaping ((_ data: Edge?, _ error: Error?) -> Void)) {
        getMyEdgeWithRequestBuilder(edgeUuid: edgeUuid).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Get My Edge
     - GET /auth/users/me/edges/{edge_uuid}
     - 自分（ユーザー）が所有するエッジを取得します。
     - parameter edgeUuid: (path) エッジのUUID 
     - returns: RequestBuilder<Edge> 
     */
    open class func getMyEdgeWithRequestBuilder(edgeUuid: String) -> RequestBuilder<Edge> {
        var localVariablePath = "/auth/users/me/edges/{edge_uuid}"
        let edgeUuidPreEscape = "\(APIHelper.mapValueToPathItem(edgeUuid))"
        let edgeUuidPostEscape = edgeUuidPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{edge_uuid}", with: edgeUuidPostEscape, options: .literal, range: nil)
        let localVariableURLString = intdashAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<Edge>.Type = intdashAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     Get User's Edge
     
     - parameter userUuid: (path)  
     - parameter edgeUuid: (path) エッジのUUID 
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getUsersEdge(userUuid: String, edgeUuid: String, apiResponseQueue: DispatchQueue = intdashAPI.apiResponseQueue, completion: @escaping ((_ data: Edge?, _ error: Error?) -> Void)) {
        getUsersEdgeWithRequestBuilder(userUuid: userUuid, edgeUuid: edgeUuid).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Get User's Edge
     - GET /auth/users/{user_uuid}/edges/{edge_uuid}
     - ユーザーが所有するエッジを取得します。
     - parameter userUuid: (path)  
     - parameter edgeUuid: (path) エッジのUUID 
     - returns: RequestBuilder<Edge> 
     */
    open class func getUsersEdgeWithRequestBuilder(userUuid: String, edgeUuid: String) -> RequestBuilder<Edge> {
        var localVariablePath = "/auth/users/{user_uuid}/edges/{edge_uuid}"
        let userUuidPreEscape = "\(APIHelper.mapValueToPathItem(userUuid))"
        let userUuidPostEscape = userUuidPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{user_uuid}", with: userUuidPostEscape, options: .literal, range: nil)
        let edgeUuidPreEscape = "\(APIHelper.mapValueToPathItem(edgeUuid))"
        let edgeUuidPostEscape = edgeUuidPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{edge_uuid}", with: edgeUuidPostEscape, options: .literal, range: nil)
        let localVariableURLString = intdashAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<Edge>.Type = intdashAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     * enum for parameter hasOwner
     */
    public enum HasOwner_listEdges: String, CaseIterable {
        case _true = "true"
        case _false = "false"
    }

    /**
     List Edges
     
     - parameter uuid: (query) エッジのUUID (optional)
     - parameter name: (query) 名前による部分一致検索 (optional)
     - parameter nickname: (query) 表示名による部分一致検索 (optional)
     - parameter ownerUuid: (query) 所有者ユーザーのUUID (optional)
     - parameter hasOwner: (query) 所有者の有無。  * &#x60;true&#x60; : 所有者が設定されているエッジを取得します。 * &#x60;false&#x60; : 所有者が設定されていないエッジを取得します。 (optional)
     - parameter sort: (query) 並べ替えに使用するキー。接尾辞 &#x60;+&#x60; を付けた場合は昇順、 &#x60;-&#x60; を付けた場合は降順で出力されます。 接尾辞を省略した場合は昇順となります。 例えば、 &#x60;name-&#x60; を指定すると、nameによる降順で出力されます。   - name   - created_at   - updated_at (optional, default to "name+")
     - parameter page: (query) 取得するページの番号 (optional, default to 1)
     - parameter perPage: (query) 1回のリクエストで取得する件数 (optional, default to 30)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func listEdges(uuid: [String]? = nil, name: [String]? = nil, nickname: [String]? = nil, ownerUuid: [String]? = nil, hasOwner: HasOwner_listEdges? = nil, sort: String? = nil, page: Int? = nil, perPage: Int? = nil, apiResponseQueue: DispatchQueue = intdashAPI.apiResponseQueue, completion: @escaping ((_ data: Edges?, _ error: Error?) -> Void)) {
        listEdgesWithRequestBuilder(uuid: uuid, name: name, nickname: nickname, ownerUuid: ownerUuid, hasOwner: hasOwner, sort: sort, page: page, perPage: perPage).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     List Edges
     - GET /auth/edges
     - エッジのリストを取得します。
     - parameter uuid: (query) エッジのUUID (optional)
     - parameter name: (query) 名前による部分一致検索 (optional)
     - parameter nickname: (query) 表示名による部分一致検索 (optional)
     - parameter ownerUuid: (query) 所有者ユーザーのUUID (optional)
     - parameter hasOwner: (query) 所有者の有無。  * &#x60;true&#x60; : 所有者が設定されているエッジを取得します。 * &#x60;false&#x60; : 所有者が設定されていないエッジを取得します。 (optional)
     - parameter sort: (query) 並べ替えに使用するキー。接尾辞 &#x60;+&#x60; を付けた場合は昇順、 &#x60;-&#x60; を付けた場合は降順で出力されます。 接尾辞を省略した場合は昇順となります。 例えば、 &#x60;name-&#x60; を指定すると、nameによる降順で出力されます。   - name   - created_at   - updated_at (optional, default to "name+")
     - parameter page: (query) 取得するページの番号 (optional, default to 1)
     - parameter perPage: (query) 1回のリクエストで取得する件数 (optional, default to 30)
     - returns: RequestBuilder<Edges> 
     */
    open class func listEdgesWithRequestBuilder(uuid: [String]? = nil, name: [String]? = nil, nickname: [String]? = nil, ownerUuid: [String]? = nil, hasOwner: HasOwner_listEdges? = nil, sort: String? = nil, page: Int? = nil, perPage: Int? = nil) -> RequestBuilder<Edges> {
        let localVariablePath = "/auth/edges"
        let localVariableURLString = intdashAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "uuid": uuid?.encodeToJSON(),
            "name": name?.encodeToJSON(),
            "nickname": nickname?.encodeToJSON(),
            "owner_uuid": ownerUuid?.encodeToJSON(),
            "has_owner": hasOwner?.encodeToJSON(),
            "sort": sort?.encodeToJSON(),
            "page": page?.encodeToJSON(),
            "per_page": perPage?.encodeToJSON(),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<Edges>.Type = intdashAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     List My Edges
     
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func listMyEdges(apiResponseQueue: DispatchQueue = intdashAPI.apiResponseQueue, completion: @escaping ((_ data: Edges?, _ error: Error?) -> Void)) {
        listMyEdgesWithRequestBuilder().execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     List My Edges
     - GET /auth/users/me/edges
     - 自分（ユーザー）が所有するエッジのリストを取得します。
     - returns: RequestBuilder<Edges> 
     */
    open class func listMyEdgesWithRequestBuilder() -> RequestBuilder<Edges> {
        let localVariablePath = "/auth/users/me/edges"
        let localVariableURLString = intdashAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<Edges>.Type = intdashAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     List User's Edges
     
     - parameter userUuid: (path)  
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func listUsersEdges(userUuid: String, apiResponseQueue: DispatchQueue = intdashAPI.apiResponseQueue, completion: @escaping ((_ data: Edges?, _ error: Error?) -> Void)) {
        listUsersEdgesWithRequestBuilder(userUuid: userUuid).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     List User's Edges
     - GET /auth/users/{user_uuid}/edges
     - 指定されたユーザーが所有するエッジのリストを取得します。
     - parameter userUuid: (path)  
     - returns: RequestBuilder<Edges> 
     */
    open class func listUsersEdgesWithRequestBuilder(userUuid: String) -> RequestBuilder<Edges> {
        var localVariablePath = "/auth/users/{user_uuid}/edges"
        let userUuidPreEscape = "\(APIHelper.mapValueToPathItem(userUuid))"
        let userUuidPostEscape = userUuidPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{user_uuid}", with: userUuidPostEscape, options: .literal, range: nil)
        let localVariableURLString = intdashAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<Edges>.Type = intdashAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     Unassign Owner
     
     - parameter edgeUuid: (path) エッジのUUID 
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func removeOwner(edgeUuid: String, apiResponseQueue: DispatchQueue = intdashAPI.apiResponseQueue, completion: @escaping ((_ data: Void?, _ error: Error?) -> Void)) {
        removeOwnerWithRequestBuilder(edgeUuid: edgeUuid).execute(apiResponseQueue) { result in
            switch result {
            case .success:
                completion((), nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Unassign Owner
     - DELETE /auth/edges/{edge_uuid}/owner
     - エッジに所有者がない状態にします。
     - parameter edgeUuid: (path) エッジのUUID 
     - returns: RequestBuilder<Void> 
     */
    open class func removeOwnerWithRequestBuilder(edgeUuid: String) -> RequestBuilder<Void> {
        var localVariablePath = "/auth/edges/{edge_uuid}/owner"
        let edgeUuidPreEscape = "\(APIHelper.mapValueToPathItem(edgeUuid))"
        let edgeUuidPostEscape = edgeUuidPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{edge_uuid}", with: edgeUuidPostEscape, options: .literal, range: nil)
        let localVariableURLString = intdashAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<Void>.Type = intdashAPI.requestBuilderFactory.getNonDecodableBuilder()

        return localVariableRequestBuilder.init(method: "DELETE", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     Update Edge
     
     - parameter edgeUuid: (path) エッジのUUID 
     - parameter patchEdgeRequest: (body)  (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func updateEdge(edgeUuid: String, patchEdgeRequest: PatchEdgeRequest? = nil, apiResponseQueue: DispatchQueue = intdashAPI.apiResponseQueue, completion: @escaping ((_ data: Edge?, _ error: Error?) -> Void)) {
        updateEdgeWithRequestBuilder(edgeUuid: edgeUuid, patchEdgeRequest: patchEdgeRequest).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Update Edge
     - PATCH /auth/edges/{edge_uuid}
     - エッジを更新します。
     - parameter edgeUuid: (path) エッジのUUID 
     - parameter patchEdgeRequest: (body)  (optional)
     - returns: RequestBuilder<Edge> 
     */
    open class func updateEdgeWithRequestBuilder(edgeUuid: String, patchEdgeRequest: PatchEdgeRequest? = nil) -> RequestBuilder<Edge> {
        var localVariablePath = "/auth/edges/{edge_uuid}"
        let edgeUuidPreEscape = "\(APIHelper.mapValueToPathItem(edgeUuid))"
        let edgeUuidPostEscape = edgeUuidPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{edge_uuid}", with: edgeUuidPostEscape, options: .literal, range: nil)
        let localVariableURLString = intdashAPI.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: patchEdgeRequest)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<Edge>.Type = intdashAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "PATCH", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     Update My Edge
     
     - parameter edgeUuid: (path) エッジのUUID 
     - parameter patchEdgeRequest: (body)  (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func updateMyEdge(edgeUuid: String, patchEdgeRequest: PatchEdgeRequest? = nil, apiResponseQueue: DispatchQueue = intdashAPI.apiResponseQueue, completion: @escaping ((_ data: Edge?, _ error: Error?) -> Void)) {
        updateMyEdgeWithRequestBuilder(edgeUuid: edgeUuid, patchEdgeRequest: patchEdgeRequest).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Update My Edge
     - PATCH /auth/users/me/edges/{edge_uuid}
     - 自分（ユーザー）が所有するエッジを更新します。
     - parameter edgeUuid: (path) エッジのUUID 
     - parameter patchEdgeRequest: (body)  (optional)
     - returns: RequestBuilder<Edge> 
     */
    open class func updateMyEdgeWithRequestBuilder(edgeUuid: String, patchEdgeRequest: PatchEdgeRequest? = nil) -> RequestBuilder<Edge> {
        var localVariablePath = "/auth/users/me/edges/{edge_uuid}"
        let edgeUuidPreEscape = "\(APIHelper.mapValueToPathItem(edgeUuid))"
        let edgeUuidPostEscape = edgeUuidPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{edge_uuid}", with: edgeUuidPostEscape, options: .literal, range: nil)
        let localVariableURLString = intdashAPI.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: patchEdgeRequest)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<Edge>.Type = intdashAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "PATCH", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     Update User's Edge
     
     - parameter userUuid: (path)  
     - parameter edgeUuid: (path) エッジのUUID 
     - parameter patchEdgeRequest: (body)  (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func updateUsersEdge(userUuid: String, edgeUuid: String, patchEdgeRequest: PatchEdgeRequest? = nil, apiResponseQueue: DispatchQueue = intdashAPI.apiResponseQueue, completion: @escaping ((_ data: Edge?, _ error: Error?) -> Void)) {
        updateUsersEdgeWithRequestBuilder(userUuid: userUuid, edgeUuid: edgeUuid, patchEdgeRequest: patchEdgeRequest).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Update User's Edge
     - PATCH /auth/users/{user_uuid}/edges/{edge_uuid}
     - ユーザーが所有するエッジを更新します。
     - parameter userUuid: (path)  
     - parameter edgeUuid: (path) エッジのUUID 
     - parameter patchEdgeRequest: (body)  (optional)
     - returns: RequestBuilder<Edge> 
     */
    open class func updateUsersEdgeWithRequestBuilder(userUuid: String, edgeUuid: String, patchEdgeRequest: PatchEdgeRequest? = nil) -> RequestBuilder<Edge> {
        var localVariablePath = "/auth/users/{user_uuid}/edges/{edge_uuid}"
        let userUuidPreEscape = "\(APIHelper.mapValueToPathItem(userUuid))"
        let userUuidPostEscape = userUuidPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{user_uuid}", with: userUuidPostEscape, options: .literal, range: nil)
        let edgeUuidPreEscape = "\(APIHelper.mapValueToPathItem(edgeUuid))"
        let edgeUuidPostEscape = edgeUuidPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{edge_uuid}", with: edgeUuidPostEscape, options: .literal, range: nil)
        let localVariableURLString = intdashAPI.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: patchEdgeRequest)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<Edge>.Type = intdashAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "PATCH", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }
}
