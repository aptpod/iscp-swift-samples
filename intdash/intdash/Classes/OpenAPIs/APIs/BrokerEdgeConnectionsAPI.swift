//
// BrokerEdgeConnectionsAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

open class BrokerEdgeConnectionsAPI {

    /**
     Get Edge Connection
     
     - parameter edgeConnectionUuid: (path) エッジ接続のUUID 
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getEdgeConnection(edgeConnectionUuid: String, apiResponseQueue: DispatchQueue = intdashAPI.apiResponseQueue, completion: @escaping ((_ data: EdgeConnection?, _ error: Error?) -> Void)) {
        getEdgeConnectionWithRequestBuilder(edgeConnectionUuid: edgeConnectionUuid).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Get Edge Connection
     - GET /v1/edge_connections/{edge_connection_uuid}
     - エッジ接続（ `/v1/ws/measurements` に接続されたエッジの接続情報）を取得します。
     - parameter edgeConnectionUuid: (path) エッジ接続のUUID 
     - returns: RequestBuilder<EdgeConnection> 
     */
    open class func getEdgeConnectionWithRequestBuilder(edgeConnectionUuid: String) -> RequestBuilder<EdgeConnection> {
        var localVariablePath = "/v1/edge_connections/{edge_connection_uuid}"
        let edgeConnectionUuidPreEscape = "\(APIHelper.mapValueToPathItem(edgeConnectionUuid))"
        let edgeConnectionUuidPostEscape = edgeConnectionUuidPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{edge_connection_uuid}", with: edgeConnectionUuidPostEscape, options: .literal, range: nil)
        let localVariableURLString = intdashAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<EdgeConnection>.Type = intdashAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     Get Project Edge Connection
     
     - parameter projectUuid: (path) プロジェクトのUUID 
     - parameter edgeConnectionUuid: (path) エッジ接続のUUID 
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getProjectEdgeConnection(projectUuid: String, edgeConnectionUuid: String, apiResponseQueue: DispatchQueue = intdashAPI.apiResponseQueue, completion: @escaping ((_ data: EdgeConnection?, _ error: Error?) -> Void)) {
        getProjectEdgeConnectionWithRequestBuilder(projectUuid: projectUuid, edgeConnectionUuid: edgeConnectionUuid).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Get Project Edge Connection
     - GET /v1/projects/{project_uuid}/edge_connections/{edge_connection_uuid}
     - エッジ接続（ `/v1/ws/measurements` に接続されたエッジの接続情報）を取得します。
     - parameter projectUuid: (path) プロジェクトのUUID 
     - parameter edgeConnectionUuid: (path) エッジ接続のUUID 
     - returns: RequestBuilder<EdgeConnection> 
     */
    open class func getProjectEdgeConnectionWithRequestBuilder(projectUuid: String, edgeConnectionUuid: String) -> RequestBuilder<EdgeConnection> {
        var localVariablePath = "/v1/projects/{project_uuid}/edge_connections/{edge_connection_uuid}"
        let projectUuidPreEscape = "\(APIHelper.mapValueToPathItem(projectUuid))"
        let projectUuidPostEscape = projectUuidPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{project_uuid}", with: projectUuidPostEscape, options: .literal, range: nil)
        let edgeConnectionUuidPreEscape = "\(APIHelper.mapValueToPathItem(edgeConnectionUuid))"
        let edgeConnectionUuidPostEscape = edgeConnectionUuidPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{edge_connection_uuid}", with: edgeConnectionUuidPostEscape, options: .literal, range: nil)
        let localVariableURLString = intdashAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<EdgeConnection>.Type = intdashAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     * enum for parameter sort
     */
    public enum Sort_listEdgeConnections: String, CaseIterable {
        case lastLivedAt = "last_lived_at"
        case createdAt = "created_at"
        case updatedAt = "updated_at"
    }

    /**
     * enum for parameter order
     */
    public enum Order_listEdgeConnections: String, CaseIterable {
        case asc = "asc"
        case desc = "desc"
    }

    /**
     List Edge Connections
     
     - parameter edge: (query) エッジのUUID (optional)
     - parameter sort: (query) 並べ替えに使用するキー (optional, default to .lastLivedAt)
     - parameter order: (query) 並べ替えの順序 (optional, default to .desc)
     - parameter limit: (query) 1回のリクエストで取得する件数 (optional, default to 100)
     - parameter page: (query) 取得するページの番号 (optional, default to 1)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func listEdgeConnections(edge: [String]? = nil, sort: Sort_listEdgeConnections? = nil, order: Order_listEdgeConnections? = nil, limit: Int? = nil, page: Int? = nil, apiResponseQueue: DispatchQueue = intdashAPI.apiResponseQueue, completion: @escaping ((_ data: EdgeConnectionList?, _ error: Error?) -> Void)) {
        listEdgeConnectionsWithRequestBuilder(edge: edge, sort: sort, order: order, limit: limit, page: page).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     List Edge Connections
     - GET /v1/edge_connections
     - エッジ接続のリストを取得します。 エッジ接続は、エッジが `/v1/ws/measurements` エンドポイントに接続したときに新規作成され、 3日間更新がないと削除されます。
     - parameter edge: (query) エッジのUUID (optional)
     - parameter sort: (query) 並べ替えに使用するキー (optional, default to .lastLivedAt)
     - parameter order: (query) 並べ替えの順序 (optional, default to .desc)
     - parameter limit: (query) 1回のリクエストで取得する件数 (optional, default to 100)
     - parameter page: (query) 取得するページの番号 (optional, default to 1)
     - returns: RequestBuilder<EdgeConnectionList> 
     */
    open class func listEdgeConnectionsWithRequestBuilder(edge: [String]? = nil, sort: Sort_listEdgeConnections? = nil, order: Order_listEdgeConnections? = nil, limit: Int? = nil, page: Int? = nil) -> RequestBuilder<EdgeConnectionList> {
        let localVariablePath = "/v1/edge_connections"
        let localVariableURLString = intdashAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "edge": edge?.encodeToJSON(),
            "sort": sort?.encodeToJSON(),
            "order": order?.encodeToJSON(),
            "limit": limit?.encodeToJSON(),
            "page": page?.encodeToJSON(),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<EdgeConnectionList>.Type = intdashAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     * enum for parameter sort
     */
    public enum Sort_listProjectEdgeConnections: String, CaseIterable {
        case lastLivedAt = "last_lived_at"
        case createdAt = "created_at"
        case updatedAt = "updated_at"
    }

    /**
     * enum for parameter order
     */
    public enum Order_listProjectEdgeConnections: String, CaseIterable {
        case asc = "asc"
        case desc = "desc"
    }

    /**
     List Project Edge Connections
     
     - parameter projectUuid: (path) プロジェクトのUUID 
     - parameter edge: (query) エッジのUUID (optional)
     - parameter sort: (query) 並べ替えに使用するキー (optional, default to .lastLivedAt)
     - parameter order: (query) 並べ替えの順序 (optional, default to .desc)
     - parameter limit: (query) 1回のリクエストで取得する件数 (optional, default to 100)
     - parameter page: (query) 取得するページの番号 (optional, default to 1)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func listProjectEdgeConnections(projectUuid: String, edge: [String]? = nil, sort: Sort_listProjectEdgeConnections? = nil, order: Order_listProjectEdgeConnections? = nil, limit: Int? = nil, page: Int? = nil, apiResponseQueue: DispatchQueue = intdashAPI.apiResponseQueue, completion: @escaping ((_ data: EdgeConnectionList?, _ error: Error?) -> Void)) {
        listProjectEdgeConnectionsWithRequestBuilder(projectUuid: projectUuid, edge: edge, sort: sort, order: order, limit: limit, page: page).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     List Project Edge Connections
     - GET /v1/projects/{project_uuid}/edge_connections
     - エッジ接続のリストを取得します。 エッジ接続は、エッジが `/v1/ws/measurements` エンドポイントに接続したときに新規作成され、 3日間更新がないと削除されます。
     - parameter projectUuid: (path) プロジェクトのUUID 
     - parameter edge: (query) エッジのUUID (optional)
     - parameter sort: (query) 並べ替えに使用するキー (optional, default to .lastLivedAt)
     - parameter order: (query) 並べ替えの順序 (optional, default to .desc)
     - parameter limit: (query) 1回のリクエストで取得する件数 (optional, default to 100)
     - parameter page: (query) 取得するページの番号 (optional, default to 1)
     - returns: RequestBuilder<EdgeConnectionList> 
     */
    open class func listProjectEdgeConnectionsWithRequestBuilder(projectUuid: String, edge: [String]? = nil, sort: Sort_listProjectEdgeConnections? = nil, order: Order_listProjectEdgeConnections? = nil, limit: Int? = nil, page: Int? = nil) -> RequestBuilder<EdgeConnectionList> {
        var localVariablePath = "/v1/projects/{project_uuid}/edge_connections"
        let projectUuidPreEscape = "\(APIHelper.mapValueToPathItem(projectUuid))"
        let projectUuidPostEscape = projectUuidPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{project_uuid}", with: projectUuidPostEscape, options: .literal, range: nil)
        let localVariableURLString = intdashAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "edge": edge?.encodeToJSON(),
            "sort": sort?.encodeToJSON(),
            "order": order?.encodeToJSON(),
            "limit": limit?.encodeToJSON(),
            "page": page?.encodeToJSON(),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<EdgeConnectionList>.Type = intdashAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }
}
