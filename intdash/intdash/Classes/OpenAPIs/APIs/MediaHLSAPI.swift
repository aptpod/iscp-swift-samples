//
// MediaHLSAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

open class MediaHLSAPI {

    /**
     Get HLS as FMP4
     
     - parameter measUuid: (path) 計測のUUID 
     - parameter channel: (path) チャンネル 
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @available(*, deprecated, message: "This operation is deprecated.")
    open class func getFMP4(measUuid: String, channel: Int, apiResponseQueue: DispatchQueue = intdashAPI.apiResponseQueue, completion: @escaping ((_ data: URL?, _ error: Error?) -> Void)) {
        getFMP4WithRequestBuilder(measUuid: measUuid, channel: channel).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Get HLS as FMP4
     - GET /media/measurements/{meas_uuid}/channels/{channel}/mp4s/measurement.mp4
     - **Deprecated** このエンドポイントの代わりに [`POST /media/videos/{video_uuid}/mp4s`](#operation/createMP4) を使用してください。 mp4リソース作成後、 `MP4`オブジェクトの `file_path`にあるPATHに従って動画を取得してください
     - parameter measUuid: (path) 計測のUUID 
     - parameter channel: (path) チャンネル 
     - returns: RequestBuilder<URL> 
     */
    @available(*, deprecated, message: "This operation is deprecated.")
    open class func getFMP4WithRequestBuilder(measUuid: String, channel: Int) -> RequestBuilder<URL> {
        var localVariablePath = "/media/measurements/{meas_uuid}/channels/{channel}/mp4s/measurement.mp4"
        let measUuidPreEscape = "\(APIHelper.mapValueToPathItem(measUuid))"
        let measUuidPostEscape = measUuidPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{meas_uuid}", with: measUuidPostEscape, options: .literal, range: nil)
        let channelPreEscape = "\(APIHelper.mapValueToPathItem(channel))"
        let channelPostEscape = channelPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{channel}", with: channelPostEscape, options: .literal, range: nil)
        let localVariableURLString = intdashAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<URL>.Type = intdashAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     List HLSes
     
     - parameter start: (query) 取得対象範囲の始点（マイクロ秒単位のUNIX時刻） (optional)
     - parameter end: (query) 取得対象範囲の終点（マイクロ秒単位のUNIX時刻） (optional)
     - parameter edgeUuid: (query) エッジのUUID (optional)
     - parameter channel: (query) チャンネル (optional)
     - parameter limit: (query) 1回のリクエストで取得する件数 (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @available(*, deprecated, message: "This operation is deprecated.")
    open class func getHLSes(start: Int? = nil, end: Int? = nil, edgeUuid: String? = nil, channel: Int? = nil, limit: Int? = nil, apiResponseQueue: DispatchQueue = intdashAPI.apiResponseQueue, completion: @escaping ((_ data: HLSList?, _ error: Error?) -> Void)) {
        getHLSesWithRequestBuilder(start: start, end: end, edgeUuid: edgeUuid, channel: channel, limit: limit).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     List HLSes
     - GET /media/hlses
     - **Deprecated** このエンドポイントではなく [`GET /media/videos`](#operation/getVideos) を使用してください
     - parameter start: (query) 取得対象範囲の始点（マイクロ秒単位のUNIX時刻） (optional)
     - parameter end: (query) 取得対象範囲の終点（マイクロ秒単位のUNIX時刻） (optional)
     - parameter edgeUuid: (query) エッジのUUID (optional)
     - parameter channel: (query) チャンネル (optional)
     - parameter limit: (query) 1回のリクエストで取得する件数 (optional)
     - returns: RequestBuilder<HLSList> 
     */
    @available(*, deprecated, message: "This operation is deprecated.")
    open class func getHLSesWithRequestBuilder(start: Int? = nil, end: Int? = nil, edgeUuid: String? = nil, channel: Int? = nil, limit: Int? = nil) -> RequestBuilder<HLSList> {
        let localVariablePath = "/media/hlses"
        let localVariableURLString = intdashAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "start": start?.encodeToJSON(),
            "end": end?.encodeToJSON(),
            "edge_uuid": edgeUuid?.encodeToJSON(),
            "channel": channel?.encodeToJSON(),
            "limit": limit?.encodeToJSON(),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<HLSList>.Type = intdashAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     Get HLS Playlist
     
     - parameter measUuid: (path) 計測のUUID 
     - parameter channel: (path) チャンネル 
     - parameter forceEnd: (query) &#x60;true&#x60; にすると、取得するm3u8形式のプレイリストに強制的にEXT-X-ENDLISTを追加します。 (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @available(*, deprecated, message: "This operation is deprecated.")
    open class func getPlaylist(measUuid: String, channel: Int, forceEnd: Bool? = nil, apiResponseQueue: DispatchQueue = intdashAPI.apiResponseQueue, completion: @escaping ((_ data: String?, _ error: Error?) -> Void)) {
        getPlaylistWithRequestBuilder(measUuid: measUuid, channel: channel, forceEnd: forceEnd).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Get HLS Playlist
     - GET /media/measurements/{meas_uuid}/channels/{channel}/hlses/playlist.m3u8
     - **Depricated** このエンドポイントの代わりに、Videoオブジェクトの `hls`にあるPATHにしたがってPlaylistを取得してください。
     - parameter measUuid: (path) 計測のUUID 
     - parameter channel: (path) チャンネル 
     - parameter forceEnd: (query) &#x60;true&#x60; にすると、取得するm3u8形式のプレイリストに強制的にEXT-X-ENDLISTを追加します。 (optional)
     - returns: RequestBuilder<String> 
     */
    @available(*, deprecated, message: "This operation is deprecated.")
    open class func getPlaylistWithRequestBuilder(measUuid: String, channel: Int, forceEnd: Bool? = nil) -> RequestBuilder<String> {
        var localVariablePath = "/media/measurements/{meas_uuid}/channels/{channel}/hlses/playlist.m3u8"
        let measUuidPreEscape = "\(APIHelper.mapValueToPathItem(measUuid))"
        let measUuidPostEscape = measUuidPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{meas_uuid}", with: measUuidPostEscape, options: .literal, range: nil)
        let channelPreEscape = "\(APIHelper.mapValueToPathItem(channel))"
        let channelPostEscape = channelPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{channel}", with: channelPostEscape, options: .literal, range: nil)
        let localVariableURLString = intdashAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "force_end": forceEnd?.encodeToJSON(),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<String>.Type = intdashAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     Get Project HLS as FMP4
     
     - parameter projectUuid: (path) プロジェクトのUUID 
     - parameter measUuid: (path) 計測のUUID 
     - parameter channel: (path) チャンネル 
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @available(*, deprecated, message: "This operation is deprecated.")
    open class func getProjectFMP4(projectUuid: String, measUuid: String, channel: Int, apiResponseQueue: DispatchQueue = intdashAPI.apiResponseQueue, completion: @escaping ((_ data: URL?, _ error: Error?) -> Void)) {
        getProjectFMP4WithRequestBuilder(projectUuid: projectUuid, measUuid: measUuid, channel: channel).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Get Project HLS as FMP4
     - GET /media/projects/{project_uuid}/measurements/{meas_uuid}/channels/{channel}/mp4s/measurement.mp4
     - **Deprecated** このエンドポイントの代わりに [`POST /media/videos/{video_uuid}/mp4s`](#operation/createMP4) を使用してください。 mp4リソース作成後、 `MP4`オブジェクトの `file_path`にあるPATHに従って動画を取得してください
     - parameter projectUuid: (path) プロジェクトのUUID 
     - parameter measUuid: (path) 計測のUUID 
     - parameter channel: (path) チャンネル 
     - returns: RequestBuilder<URL> 
     */
    @available(*, deprecated, message: "This operation is deprecated.")
    open class func getProjectFMP4WithRequestBuilder(projectUuid: String, measUuid: String, channel: Int) -> RequestBuilder<URL> {
        var localVariablePath = "/media/projects/{project_uuid}/measurements/{meas_uuid}/channels/{channel}/mp4s/measurement.mp4"
        let projectUuidPreEscape = "\(APIHelper.mapValueToPathItem(projectUuid))"
        let projectUuidPostEscape = projectUuidPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{project_uuid}", with: projectUuidPostEscape, options: .literal, range: nil)
        let measUuidPreEscape = "\(APIHelper.mapValueToPathItem(measUuid))"
        let measUuidPostEscape = measUuidPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{meas_uuid}", with: measUuidPostEscape, options: .literal, range: nil)
        let channelPreEscape = "\(APIHelper.mapValueToPathItem(channel))"
        let channelPostEscape = channelPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{channel}", with: channelPostEscape, options: .literal, range: nil)
        let localVariableURLString = intdashAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<URL>.Type = intdashAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     List Project HLSes
     
     - parameter projectUuid: (path) プロジェクトのUUID 
     - parameter start: (query) 取得対象範囲の始点（マイクロ秒単位のUNIX時刻） (optional)
     - parameter end: (query) 取得対象範囲の終点（マイクロ秒単位のUNIX時刻） (optional)
     - parameter edgeUuid: (query) エッジのUUID (optional)
     - parameter channel: (query) チャンネル (optional)
     - parameter limit: (query) 1回のリクエストで取得する件数 (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @available(*, deprecated, message: "This operation is deprecated.")
    open class func getProjectHLSes(projectUuid: String, start: Int? = nil, end: Int? = nil, edgeUuid: String? = nil, channel: Int? = nil, limit: Int? = nil, apiResponseQueue: DispatchQueue = intdashAPI.apiResponseQueue, completion: @escaping ((_ data: HLSList?, _ error: Error?) -> Void)) {
        getProjectHLSesWithRequestBuilder(projectUuid: projectUuid, start: start, end: end, edgeUuid: edgeUuid, channel: channel, limit: limit).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     List Project HLSes
     - GET /media/projects/{project_uuid}/hlses
     - **Deprecated** このエンドポイントではなく [`GET /media/videos`](#operation/getVideos) を使用してください
     - parameter projectUuid: (path) プロジェクトのUUID 
     - parameter start: (query) 取得対象範囲の始点（マイクロ秒単位のUNIX時刻） (optional)
     - parameter end: (query) 取得対象範囲の終点（マイクロ秒単位のUNIX時刻） (optional)
     - parameter edgeUuid: (query) エッジのUUID (optional)
     - parameter channel: (query) チャンネル (optional)
     - parameter limit: (query) 1回のリクエストで取得する件数 (optional)
     - returns: RequestBuilder<HLSList> 
     */
    @available(*, deprecated, message: "This operation is deprecated.")
    open class func getProjectHLSesWithRequestBuilder(projectUuid: String, start: Int? = nil, end: Int? = nil, edgeUuid: String? = nil, channel: Int? = nil, limit: Int? = nil) -> RequestBuilder<HLSList> {
        var localVariablePath = "/media/projects/{project_uuid}/hlses"
        let projectUuidPreEscape = "\(APIHelper.mapValueToPathItem(projectUuid))"
        let projectUuidPostEscape = projectUuidPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{project_uuid}", with: projectUuidPostEscape, options: .literal, range: nil)
        let localVariableURLString = intdashAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "start": start?.encodeToJSON(),
            "end": end?.encodeToJSON(),
            "edge_uuid": edgeUuid?.encodeToJSON(),
            "channel": channel?.encodeToJSON(),
            "limit": limit?.encodeToJSON(),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<HLSList>.Type = intdashAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     Get Project HLS Playlist
     
     - parameter projectUuid: (path) プロジェクトのUUID 
     - parameter measUuid: (path) 計測のUUID 
     - parameter channel: (path) チャンネル 
     - parameter forceEnd: (query) &#x60;true&#x60; にすると、取得するm3u8形式のプレイリストに強制的にEXT-X-ENDLISTを追加します。 (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @available(*, deprecated, message: "This operation is deprecated.")
    open class func getProjectPlaylist(projectUuid: String, measUuid: String, channel: Int, forceEnd: Bool? = nil, apiResponseQueue: DispatchQueue = intdashAPI.apiResponseQueue, completion: @escaping ((_ data: String?, _ error: Error?) -> Void)) {
        getProjectPlaylistWithRequestBuilder(projectUuid: projectUuid, measUuid: measUuid, channel: channel, forceEnd: forceEnd).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Get Project HLS Playlist
     - GET /media/projects/{project_uuid}/measurements/{meas_uuid}/channels/{channel}/hlses/playlist.m3u8
     - **Depricated** このエンドポイントの代わりに、Videoオブジェクトの `hls`にあるPATHにしたがってPlaylistを取得してください。
     - parameter projectUuid: (path) プロジェクトのUUID 
     - parameter measUuid: (path) 計測のUUID 
     - parameter channel: (path) チャンネル 
     - parameter forceEnd: (query) &#x60;true&#x60; にすると、取得するm3u8形式のプレイリストに強制的にEXT-X-ENDLISTを追加します。 (optional)
     - returns: RequestBuilder<String> 
     */
    @available(*, deprecated, message: "This operation is deprecated.")
    open class func getProjectPlaylistWithRequestBuilder(projectUuid: String, measUuid: String, channel: Int, forceEnd: Bool? = nil) -> RequestBuilder<String> {
        var localVariablePath = "/media/projects/{project_uuid}/measurements/{meas_uuid}/channels/{channel}/hlses/playlist.m3u8"
        let projectUuidPreEscape = "\(APIHelper.mapValueToPathItem(projectUuid))"
        let projectUuidPostEscape = projectUuidPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{project_uuid}", with: projectUuidPostEscape, options: .literal, range: nil)
        let measUuidPreEscape = "\(APIHelper.mapValueToPathItem(measUuid))"
        let measUuidPostEscape = measUuidPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{meas_uuid}", with: measUuidPostEscape, options: .literal, range: nil)
        let channelPreEscape = "\(APIHelper.mapValueToPathItem(channel))"
        let channelPostEscape = channelPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{channel}", with: channelPostEscape, options: .literal, range: nil)
        let localVariableURLString = intdashAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "force_end": forceEnd?.encodeToJSON(),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<String>.Type = intdashAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }
}
