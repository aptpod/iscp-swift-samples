//
// AuthProjectsAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

open class AuthProjectsAPI {

    /**
     Create Project
     
     - parameter groupUuid: (path) グループのUUID 
     - parameter createProjectRequest: (body)  (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func createProject(groupUuid: String, createProjectRequest: CreateProjectRequest? = nil, apiResponseQueue: DispatchQueue = intdashAPI.apiResponseQueue, completion: @escaping ((_ data: Project?, _ error: Error?) -> Void)) {
        createProjectWithRequestBuilder(groupUuid: groupUuid, createProjectRequest: createProjectRequest).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Create Project
     - POST /auth/groups/{group_uuid}/projects
     - プロジェクトを作成します。
     - parameter groupUuid: (path) グループのUUID 
     - parameter createProjectRequest: (body)  (optional)
     - returns: RequestBuilder<Project> 
     */
    open class func createProjectWithRequestBuilder(groupUuid: String, createProjectRequest: CreateProjectRequest? = nil) -> RequestBuilder<Project> {
        var localVariablePath = "/auth/groups/{group_uuid}/projects"
        let groupUuidPreEscape = "\(APIHelper.mapValueToPathItem(groupUuid))"
        let groupUuidPostEscape = groupUuidPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{group_uuid}", with: groupUuidPostEscape, options: .literal, range: nil)
        let localVariableURLString = intdashAPI.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: createProjectRequest)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<Project>.Type = intdashAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "POST", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     Delete Project
     
     - parameter projectUuid: (path) プロジェクトのUUID 
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func deleteProject(projectUuid: String, apiResponseQueue: DispatchQueue = intdashAPI.apiResponseQueue, completion: @escaping ((_ data: Void?, _ error: Error?) -> Void)) {
        deleteProjectWithRequestBuilder(projectUuid: projectUuid).execute(apiResponseQueue) { result in
            switch result {
            case .success:
                completion((), nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Delete Project
     - DELETE /auth/projects/{project_uuid}
     - プロジェクトを削除します。プロジェクトを削除できるのはプロジェクトのオーナーのみです。
     - parameter projectUuid: (path) プロジェクトのUUID 
     - returns: RequestBuilder<Void> 
     */
    open class func deleteProjectWithRequestBuilder(projectUuid: String) -> RequestBuilder<Void> {
        var localVariablePath = "/auth/projects/{project_uuid}"
        let projectUuidPreEscape = "\(APIHelper.mapValueToPathItem(projectUuid))"
        let projectUuidPostEscape = projectUuidPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{project_uuid}", with: projectUuidPostEscape, options: .literal, range: nil)
        let localVariableURLString = intdashAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<Void>.Type = intdashAPI.requestBuilderFactory.getNonDecodableBuilder()

        return localVariableRequestBuilder.init(method: "DELETE", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     Get Project
     
     - parameter projectUuid: (path) プロジェクトのUUID 
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getProject(projectUuid: String, apiResponseQueue: DispatchQueue = intdashAPI.apiResponseQueue, completion: @escaping ((_ data: Project?, _ error: Error?) -> Void)) {
        getProjectWithRequestBuilder(projectUuid: projectUuid).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Get Project
     - GET /auth/projects/{project_uuid}
     - プロジェクトを取得します。
     - parameter projectUuid: (path) プロジェクトのUUID 
     - returns: RequestBuilder<Project> 
     */
    open class func getProjectWithRequestBuilder(projectUuid: String) -> RequestBuilder<Project> {
        var localVariablePath = "/auth/projects/{project_uuid}"
        let projectUuidPreEscape = "\(APIHelper.mapValueToPathItem(projectUuid))"
        let projectUuidPostEscape = projectUuidPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{project_uuid}", with: projectUuidPostEscape, options: .literal, range: nil)
        let localVariableURLString = intdashAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<Project>.Type = intdashAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     * enum for parameter sort
     */
    public enum Sort_listGroupProjects: String, CaseIterable {
        case CreatedAt = "created_at"
        case CreatedAtAsc = "created_at+"
        case CreatedAtDesc = "created_at-"
        case UpdatedAt = "updated_at"
        case UpdatedAtAsc = "updated_at+"
        case UpdatedAtDesc = "updated_at-"
        case NameAt = "name_at"
        case NameAtAsc = "name_at+"
        case NameAtDesc = "name_at-"
    }

    /**
     List Group Projects
     
     - parameter groupUuid: (path) グループのUUID 
     - parameter page: (query) 取得するページの番号 (optional, default to 1)
     - parameter perPage: (query) 1回のリクエストで取得する件数 (optional, default to 30)
     - parameter sort: (query) 並べ替えに使用するキー。接尾辞 &#x60;+&#x60; を付けた場合は昇順、 &#x60;-&#x60; を付けた場合は降順で出力されます。 接尾辞を省略した場合は昇順となります。 例えば、 &#x60;name-&#x60; を指定すると、nameによる降順で出力されます。 (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func listGroupProjects(groupUuid: String, page: Int? = nil, perPage: Int? = nil, sort: Sort_listGroupProjects? = nil, apiResponseQueue: DispatchQueue = intdashAPI.apiResponseQueue, completion: @escaping ((_ data: Projects?, _ error: Error?) -> Void)) {
        listGroupProjectsWithRequestBuilder(groupUuid: groupUuid, page: page, perPage: perPage, sort: sort).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     List Group Projects
     - GET /auth/groups/{group_uuid}/projects
     - プロジェクトのリストを取得します。
     - parameter groupUuid: (path) グループのUUID 
     - parameter page: (query) 取得するページの番号 (optional, default to 1)
     - parameter perPage: (query) 1回のリクエストで取得する件数 (optional, default to 30)
     - parameter sort: (query) 並べ替えに使用するキー。接尾辞 &#x60;+&#x60; を付けた場合は昇順、 &#x60;-&#x60; を付けた場合は降順で出力されます。 接尾辞を省略した場合は昇順となります。 例えば、 &#x60;name-&#x60; を指定すると、nameによる降順で出力されます。 (optional)
     - returns: RequestBuilder<Projects> 
     */
    open class func listGroupProjectsWithRequestBuilder(groupUuid: String, page: Int? = nil, perPage: Int? = nil, sort: Sort_listGroupProjects? = nil) -> RequestBuilder<Projects> {
        var localVariablePath = "/auth/groups/{group_uuid}/projects"
        let groupUuidPreEscape = "\(APIHelper.mapValueToPathItem(groupUuid))"
        let groupUuidPostEscape = groupUuidPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{group_uuid}", with: groupUuidPostEscape, options: .literal, range: nil)
        let localVariableURLString = intdashAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "page": page?.encodeToJSON(),
            "per_page": perPage?.encodeToJSON(),
            "sort": sort?.encodeToJSON(),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<Projects>.Type = intdashAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     List My Projects
     
     - parameter page: (query) 取得するページの番号 (optional, default to 1)
     - parameter perPage: (query) 1回のリクエストで取得する件数 (optional, default to 30)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func listMyProjects(page: Int? = nil, perPage: Int? = nil, apiResponseQueue: DispatchQueue = intdashAPI.apiResponseQueue, completion: @escaping ((_ data: Projects?, _ error: Error?) -> Void)) {
        listMyProjectsWithRequestBuilder(page: page, perPage: perPage).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     List My Projects
     - GET /auth/users/me/projects
     - 自分（ユーザー）が所属するプロジェクトのリストを取得します。
     - parameter page: (query) 取得するページの番号 (optional, default to 1)
     - parameter perPage: (query) 1回のリクエストで取得する件数 (optional, default to 30)
     - returns: RequestBuilder<Projects> 
     */
    open class func listMyProjectsWithRequestBuilder(page: Int? = nil, perPage: Int? = nil) -> RequestBuilder<Projects> {
        let localVariablePath = "/auth/users/me/projects"
        let localVariableURLString = intdashAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "page": page?.encodeToJSON(),
            "per_page": perPage?.encodeToJSON(),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<Projects>.Type = intdashAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     * enum for parameter sort
     */
    public enum Sort_listProjects: String, CaseIterable {
        case CreatedAt = "created_at"
        case CreatedAtAsc = "created_at+"
        case CreatedAtDesc = "created_at-"
        case UpdatedAt = "updated_at"
        case UpdatedAtAsc = "updated_at+"
        case UpdatedAtDesc = "updated_at-"
        case NameAt = "name_at"
        case NameAtAsc = "name_at+"
        case NameAtDesc = "name_at-"
    }

    /**
     List Projects
     
     - parameter sinceCreatedAt: (query) 指定した時刻より後に作成されたリソースを取得します。 (optional)
     - parameter page: (query) 取得するページの番号 (optional, default to 1)
     - parameter perPage: (query) 1回のリクエストで取得する件数 (optional, default to 30)
     - parameter sort: (query) 並べ替えに使用するキー。接尾辞 &#x60;+&#x60; を付けた場合は昇順、 &#x60;-&#x60; を付けた場合は降順で出力されます。 接尾辞を省略した場合は昇順となります。 例えば、 &#x60;name-&#x60; を指定すると、nameによる降順で出力されます。 (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func listProjects(sinceCreatedAt: Date? = nil, page: Int? = nil, perPage: Int? = nil, sort: Sort_listProjects? = nil, apiResponseQueue: DispatchQueue = intdashAPI.apiResponseQueue, completion: @escaping ((_ data: Projects?, _ error: Error?) -> Void)) {
        listProjectsWithRequestBuilder(sinceCreatedAt: sinceCreatedAt, page: page, perPage: perPage, sort: sort).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     List Projects
     - GET /auth/projects
     - プロジェクトのリストを取得します。
     - parameter sinceCreatedAt: (query) 指定した時刻より後に作成されたリソースを取得します。 (optional)
     - parameter page: (query) 取得するページの番号 (optional, default to 1)
     - parameter perPage: (query) 1回のリクエストで取得する件数 (optional, default to 30)
     - parameter sort: (query) 並べ替えに使用するキー。接尾辞 &#x60;+&#x60; を付けた場合は昇順、 &#x60;-&#x60; を付けた場合は降順で出力されます。 接尾辞を省略した場合は昇順となります。 例えば、 &#x60;name-&#x60; を指定すると、nameによる降順で出力されます。 (optional)
     - returns: RequestBuilder<Projects> 
     */
    open class func listProjectsWithRequestBuilder(sinceCreatedAt: Date? = nil, page: Int? = nil, perPage: Int? = nil, sort: Sort_listProjects? = nil) -> RequestBuilder<Projects> {
        let localVariablePath = "/auth/projects"
        let localVariableURLString = intdashAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "since_created_at": sinceCreatedAt?.encodeToJSON(),
            "page": page?.encodeToJSON(),
            "per_page": perPage?.encodeToJSON(),
            "sort": sort?.encodeToJSON(),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<Projects>.Type = intdashAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     Update Project
     
     - parameter projectUuid: (path) プロジェクトのUUID 
     - parameter updateProjectRequest: (body)  (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func updateProject(projectUuid: String, updateProjectRequest: UpdateProjectRequest? = nil, apiResponseQueue: DispatchQueue = intdashAPI.apiResponseQueue, completion: @escaping ((_ data: Project?, _ error: Error?) -> Void)) {
        updateProjectWithRequestBuilder(projectUuid: projectUuid, updateProjectRequest: updateProjectRequest).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Update Project
     - PATCH /auth/projects/{project_uuid}
     - プロジェクトを更新します。
     - parameter projectUuid: (path) プロジェクトのUUID 
     - parameter updateProjectRequest: (body)  (optional)
     - returns: RequestBuilder<Project> 
     */
    open class func updateProjectWithRequestBuilder(projectUuid: String, updateProjectRequest: UpdateProjectRequest? = nil) -> RequestBuilder<Project> {
        var localVariablePath = "/auth/projects/{project_uuid}"
        let projectUuidPreEscape = "\(APIHelper.mapValueToPathItem(projectUuid))"
        let projectUuidPostEscape = projectUuidPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{project_uuid}", with: projectUuidPostEscape, options: .literal, range: nil)
        let localVariableURLString = intdashAPI.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: updateProjectRequest)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<Project>.Type = intdashAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "PATCH", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }
}
