//
// AuthProjectEdgesAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

open class AuthProjectEdgesAPI {

    /**
     Add Project Edge
     
     - parameter projectUuid: (path) プロジェクトのUUID 
     - parameter addProjectEdgeRequest: (body)  (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func addProjectEdges(projectUuid: String, addProjectEdgeRequest: AddProjectEdgeRequest? = nil, apiResponseQueue: DispatchQueue = intdashAPI.apiResponseQueue, completion: @escaping ((_ data: ProjectEdge?, _ error: Error?) -> Void)) {
        addProjectEdgesWithRequestBuilder(projectUuid: projectUuid, addProjectEdgeRequest: addProjectEdgeRequest).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Add Project Edge
     - POST /auth/projects/{project_uuid}/edges
     - エッジをプロジェクトに追加します。
     - parameter projectUuid: (path) プロジェクトのUUID 
     - parameter addProjectEdgeRequest: (body)  (optional)
     - returns: RequestBuilder<ProjectEdge> 
     */
    open class func addProjectEdgesWithRequestBuilder(projectUuid: String, addProjectEdgeRequest: AddProjectEdgeRequest? = nil) -> RequestBuilder<ProjectEdge> {
        var localVariablePath = "/auth/projects/{project_uuid}/edges"
        let projectUuidPreEscape = "\(APIHelper.mapValueToPathItem(projectUuid))"
        let projectUuidPostEscape = projectUuidPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{project_uuid}", with: projectUuidPostEscape, options: .literal, range: nil)
        let localVariableURLString = intdashAPI.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: addProjectEdgeRequest)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<ProjectEdge>.Type = intdashAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "POST", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     Get Project Edge
     
     - parameter projectUuid: (path) プロジェクトのUUID 
     - parameter edgeUuid: (path) エッジのUUID 
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getProjectEdge(projectUuid: String, edgeUuid: String, apiResponseQueue: DispatchQueue = intdashAPI.apiResponseQueue, completion: @escaping ((_ data: ProjectEdge?, _ error: Error?) -> Void)) {
        getProjectEdgeWithRequestBuilder(projectUuid: projectUuid, edgeUuid: edgeUuid).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Get Project Edge
     - GET /auth/projects/{project_uuid}/edges/{edge_uuid}
     - プロジェクトに所属するエッジを取得します。
     - parameter projectUuid: (path) プロジェクトのUUID 
     - parameter edgeUuid: (path) エッジのUUID 
     - returns: RequestBuilder<ProjectEdge> 
     */
    open class func getProjectEdgeWithRequestBuilder(projectUuid: String, edgeUuid: String) -> RequestBuilder<ProjectEdge> {
        var localVariablePath = "/auth/projects/{project_uuid}/edges/{edge_uuid}"
        let projectUuidPreEscape = "\(APIHelper.mapValueToPathItem(projectUuid))"
        let projectUuidPostEscape = projectUuidPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{project_uuid}", with: projectUuidPostEscape, options: .literal, range: nil)
        let edgeUuidPreEscape = "\(APIHelper.mapValueToPathItem(edgeUuid))"
        let edgeUuidPostEscape = edgeUuidPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{edge_uuid}", with: edgeUuidPostEscape, options: .literal, range: nil)
        let localVariableURLString = intdashAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<ProjectEdge>.Type = intdashAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     List Project Edges
     
     - parameter projectUuid: (path) プロジェクトのUUID 
     - parameter edgeUuid: (query) エッジのUUID (optional)
     - parameter page: (query) 取得するページの番号 (optional, default to 1)
     - parameter perPage: (query) 1回のリクエストで取得する件数 (optional, default to 30)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func listProjectEdges(projectUuid: String, edgeUuid: [String]? = nil, page: Int? = nil, perPage: Int? = nil, apiResponseQueue: DispatchQueue = intdashAPI.apiResponseQueue, completion: @escaping ((_ data: ProjectEdges?, _ error: Error?) -> Void)) {
        listProjectEdgesWithRequestBuilder(projectUuid: projectUuid, edgeUuid: edgeUuid, page: page, perPage: perPage).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     List Project Edges
     - GET /auth/projects/{project_uuid}/edges
     - プロジェクトに所属するエッジのリストを取得します。
     - parameter projectUuid: (path) プロジェクトのUUID 
     - parameter edgeUuid: (query) エッジのUUID (optional)
     - parameter page: (query) 取得するページの番号 (optional, default to 1)
     - parameter perPage: (query) 1回のリクエストで取得する件数 (optional, default to 30)
     - returns: RequestBuilder<ProjectEdges> 
     */
    open class func listProjectEdgesWithRequestBuilder(projectUuid: String, edgeUuid: [String]? = nil, page: Int? = nil, perPage: Int? = nil) -> RequestBuilder<ProjectEdges> {
        var localVariablePath = "/auth/projects/{project_uuid}/edges"
        let projectUuidPreEscape = "\(APIHelper.mapValueToPathItem(projectUuid))"
        let projectUuidPostEscape = projectUuidPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{project_uuid}", with: projectUuidPostEscape, options: .literal, range: nil)
        let localVariableURLString = intdashAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "edge_uuid": edgeUuid?.encodeToJSON(),
            "page": page?.encodeToJSON(),
            "per_page": perPage?.encodeToJSON(),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<ProjectEdges>.Type = intdashAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     Remove Project Edge
     
     - parameter projectUuid: (path) プロジェクトのUUID 
     - parameter edgeUuid: (path) エッジのUUID 
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func removeProjectEdge(projectUuid: String, edgeUuid: String, apiResponseQueue: DispatchQueue = intdashAPI.apiResponseQueue, completion: @escaping ((_ data: Void?, _ error: Error?) -> Void)) {
        removeProjectEdgeWithRequestBuilder(projectUuid: projectUuid, edgeUuid: edgeUuid).execute(apiResponseQueue) { result in
            switch result {
            case .success:
                completion((), nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Remove Project Edge
     - DELETE /auth/projects/{project_uuid}/edges/{edge_uuid}
     - プロジェクトからエッジを外します。
     - parameter projectUuid: (path) プロジェクトのUUID 
     - parameter edgeUuid: (path) エッジのUUID 
     - returns: RequestBuilder<Void> 
     */
    open class func removeProjectEdgeWithRequestBuilder(projectUuid: String, edgeUuid: String) -> RequestBuilder<Void> {
        var localVariablePath = "/auth/projects/{project_uuid}/edges/{edge_uuid}"
        let projectUuidPreEscape = "\(APIHelper.mapValueToPathItem(projectUuid))"
        let projectUuidPostEscape = projectUuidPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{project_uuid}", with: projectUuidPostEscape, options: .literal, range: nil)
        let edgeUuidPreEscape = "\(APIHelper.mapValueToPathItem(edgeUuid))"
        let edgeUuidPostEscape = edgeUuidPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{edge_uuid}", with: edgeUuidPostEscape, options: .literal, range: nil)
        let localVariableURLString = intdashAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<Void>.Type = intdashAPI.requestBuilderFactory.getNonDecodableBuilder()

        return localVariableRequestBuilder.init(method: "DELETE", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     Update Project Edge
     
     - parameter projectUuid: (path) プロジェクトのUUID 
     - parameter edgeUuid: (path) エッジのUUID 
     - parameter updateProjectEdgeRequest: (body)  (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func updateProjectEdge(projectUuid: String, edgeUuid: String, updateProjectEdgeRequest: UpdateProjectEdgeRequest? = nil, apiResponseQueue: DispatchQueue = intdashAPI.apiResponseQueue, completion: @escaping ((_ data: ProjectEdge?, _ error: Error?) -> Void)) {
        updateProjectEdgeWithRequestBuilder(projectUuid: projectUuid, edgeUuid: edgeUuid, updateProjectEdgeRequest: updateProjectEdgeRequest).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Update Project Edge
     - PATCH /auth/projects/{project_uuid}/edges/{edge_uuid}
     - プロジェクトエッジを更新します。
     - parameter projectUuid: (path) プロジェクトのUUID 
     - parameter edgeUuid: (path) エッジのUUID 
     - parameter updateProjectEdgeRequest: (body)  (optional)
     - returns: RequestBuilder<ProjectEdge> 
     */
    open class func updateProjectEdgeWithRequestBuilder(projectUuid: String, edgeUuid: String, updateProjectEdgeRequest: UpdateProjectEdgeRequest? = nil) -> RequestBuilder<ProjectEdge> {
        var localVariablePath = "/auth/projects/{project_uuid}/edges/{edge_uuid}"
        let projectUuidPreEscape = "\(APIHelper.mapValueToPathItem(projectUuid))"
        let projectUuidPostEscape = projectUuidPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{project_uuid}", with: projectUuidPostEscape, options: .literal, range: nil)
        let edgeUuidPreEscape = "\(APIHelper.mapValueToPathItem(edgeUuid))"
        let edgeUuidPostEscape = edgeUuidPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{edge_uuid}", with: edgeUuidPostEscape, options: .literal, range: nil)
        let localVariableURLString = intdashAPI.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: updateProjectEdgeRequest)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<ProjectEdge>.Type = intdashAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "PATCH", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }
}
