//
// MeasurementUploadStatusGetResponse.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct MeasurementUploadStatusGetResponse: Codable {

    public enum State: String, Codable, CaseIterable {
        case ready = "ready"
        case processing = "processing"
        case succeed = "succeed"
        case failed = "failed"
        case canceled = "canceled"
    }
    /** 計測アップロードのUUID */
    public var uuid: String
    /** 計測のUUID */
    public var measUuid: String
    /** 計測への変換ジョブのステータス */
    public var state: State
    /** 計測への変換ジョブの結果 */
    public var message: String
    /** 計測に変換する対象のファイル名。 同じ日に同じ名前のファイルがアップロードされた場合は、 ランダムな接頭辞が付与されます。 */
    public var fileName: String
    /** 計測アップロードの作成日時 */
    public var createdAt: String
    /** 計測アップロードの最終更新日時 */
    public var updatedAt: String

    public init(uuid: String, measUuid: String, state: State, message: String, fileName: String, createdAt: String, updatedAt: String) {
        self.uuid = uuid
        self.measUuid = measUuid
        self.state = state
        self.message = message
        self.fileName = fileName
        self.createdAt = createdAt
        self.updatedAt = updatedAt
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case uuid
        case measUuid = "meas_uuid"
        case state
        case message
        case fileName = "file_name"
        case createdAt = "created_at"
        case updatedAt = "updated_at"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(uuid, forKey: .uuid)
        try container.encode(measUuid, forKey: .measUuid)
        try container.encode(state, forKey: .state)
        try container.encode(message, forKey: .message)
        try container.encode(fileName, forKey: .fileName)
        try container.encode(createdAt, forKey: .createdAt)
        try container.encode(updatedAt, forKey: .updatedAt)
    }
}

