//
// DataID.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** データID */
public struct DataID: Codable {

    /** データタイプ */
    public var dataType: Int
    /** チャンネル */
    public var channel: Int64
    /** データID */
    public var dataId: String

    public init(dataType: Int, channel: Int64, dataId: String) {
        self.dataType = dataType
        self.channel = channel
        self.dataId = dataId
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case dataType = "data_type"
        case channel
        case dataId = "data_id"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(dataType, forKey: .dataType)
        try container.encode(channel, forKey: .channel)
        try container.encode(dataId, forKey: .dataId)
    }
}

