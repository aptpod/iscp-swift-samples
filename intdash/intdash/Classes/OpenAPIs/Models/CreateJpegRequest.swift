//
// CreateJpegRequest.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct CreateJpegRequest: Codable {

    /** 時間範囲を指定してその部分のJPEGを作成する場合は `true` にします。 */
    public var trim: Bool?
    /** 計測開始からのオフセット（マイクロ秒）。trimがtrueの場合は必須です。 */
    public var startOffset: Int?
    /** 長さ（マイクロ秒）。trimがtrueの場合は必須です。 */
    public var duration: Int?
    /** フレームレート。値が省略された場合は、元のデータと同じフレームレートが使用されます。 */
    public var fps: Float?
    public var quality: JpegQuality?

    public init(trim: Bool? = nil, startOffset: Int? = nil, duration: Int? = nil, fps: Float? = nil, quality: JpegQuality? = nil) {
        self.trim = trim
        self.startOffset = startOffset
        self.duration = duration
        self.fps = fps
        self.quality = quality
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case trim
        case startOffset = "start_offset"
        case duration
        case fps
        case quality
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(trim, forKey: .trim)
        try container.encodeIfPresent(startOffset, forKey: .startOffset)
        try container.encodeIfPresent(duration, forKey: .duration)
        try container.encodeIfPresent(fps, forKey: .fps)
        try container.encodeIfPresent(quality, forKey: .quality)
    }
}

