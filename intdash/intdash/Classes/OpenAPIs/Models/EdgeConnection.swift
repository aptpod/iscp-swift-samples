//
// EdgeConnection.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct EdgeConnection: Codable {

    /** エッジ接続のUUID */
    public var uuid: String
    /** サーバーがこのエッジ接続を確認できた最後の日時。 エッジとサーバーがWebSocketで接続されている間、この値は数秒おきに最新の日時に更新されます。 WebSocketが切断されると、それ以上更新されなくなります。 更新は数秒おきであるため、WebSocketが切断された場合に その切断の時刻が正確に記録されるわけではありません。 */
    public var lastLivedAt: String
    public var edge: EdgeConnectionEdge?
    /** エッジ接続が作成された日時 */
    public var createdAt: String
    /** エッジ接続の最終更新日時 */
    public var updatedAt: String
    /** ダウンストリームについての情報 */
    public var downstreams: [EdgeConnectionDownstream]
    /** アップストリームについての情報 */
    public var upstreams: [EdgeConnectionUpstream]

    public init(uuid: String, lastLivedAt: String, edge: EdgeConnectionEdge?, createdAt: String, updatedAt: String, downstreams: [EdgeConnectionDownstream], upstreams: [EdgeConnectionUpstream]) {
        self.uuid = uuid
        self.lastLivedAt = lastLivedAt
        self.edge = edge
        self.createdAt = createdAt
        self.updatedAt = updatedAt
        self.downstreams = downstreams
        self.upstreams = upstreams
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case uuid
        case lastLivedAt = "last_lived_at"
        case edge
        case createdAt = "created_at"
        case updatedAt = "updated_at"
        case downstreams
        case upstreams
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(uuid, forKey: .uuid)
        try container.encode(lastLivedAt, forKey: .lastLivedAt)
        try container.encode(edge, forKey: .edge)
        try container.encode(createdAt, forKey: .createdAt)
        try container.encode(updatedAt, forKey: .updatedAt)
        try container.encode(downstreams, forKey: .downstreams)
        try container.encode(upstreams, forKey: .upstreams)
    }
}

