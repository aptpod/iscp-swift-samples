//
// User.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct User: Codable {

    /** ユーザーのUUID */
    public var uuid: String
    /** ユーザーの名前 */
    public var name: String
    /** ユーザーの表示名 */
    public var nickname: String
    /** * `true`: このユーザーは無効化されています * `false` : このユーザーは有効です。 */
    public var disabled: Bool
    /** ユーザーの説明 */
    public var description: String
    /** `true` の場合、このユーザーはスーパーユーザーです。 */
    public var isSuper: Bool
    public var emails: [UserEmail]
    /** 最後にログインした日時 */
    public var lastSignInAt: Date
    /** 割り当てられたロールのUUID */
    public var roles: [String]
    public var password: UserPassword
    /** 作成日時 */
    public var createdAt: Date
    /** 最終更新日時 */
    public var updatedAt: Date

    public init(uuid: String, name: String, nickname: String, disabled: Bool, description: String, isSuper: Bool, emails: [UserEmail], lastSignInAt: Date, roles: [String], password: UserPassword, createdAt: Date, updatedAt: Date) {
        self.uuid = uuid
        self.name = name
        self.nickname = nickname
        self.disabled = disabled
        self.description = description
        self.isSuper = isSuper
        self.emails = emails
        self.lastSignInAt = lastSignInAt
        self.roles = roles
        self.password = password
        self.createdAt = createdAt
        self.updatedAt = updatedAt
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case uuid
        case name
        case nickname
        case disabled
        case description
        case isSuper = "is_super"
        case emails
        case lastSignInAt = "last_sign_in_at"
        case roles
        case password
        case createdAt = "created_at"
        case updatedAt = "updated_at"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(uuid, forKey: .uuid)
        try container.encode(name, forKey: .name)
        try container.encode(nickname, forKey: .nickname)
        try container.encode(disabled, forKey: .disabled)
        try container.encode(description, forKey: .description)
        try container.encode(isSuper, forKey: .isSuper)
        try container.encode(emails, forKey: .emails)
        try container.encode(lastSignInAt, forKey: .lastSignInAt)
        try container.encode(roles, forKey: .roles)
        try container.encode(password, forKey: .password)
        try container.encode(createdAt, forKey: .createdAt)
        try container.encode(updatedAt, forKey: .updatedAt)
    }
}

