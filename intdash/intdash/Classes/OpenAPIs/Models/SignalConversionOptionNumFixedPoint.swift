//
// SignalConversionOptionNumFixedPoint.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct SignalConversionOptionNumFixedPoint: Codable {

    public enum Endian: String, Codable, CaseIterable {
        case big = "big"
        case little = "little"
    }
    public enum Sign: String, Codable, CaseIterable {
        case signed = "signed"
        case unsigned = "unsigned"
    }
    /** 開始ビット位置 */
    public var startbit: Int
    /** ビットサイズ */
    public var bitsize: Int
    /** エンディアン */
    public var endian: Endian
    /** 符号有無 */
    public var sign: Sign
    /** スケールファクター */
    public var scale: Double
    /** オフセット */
    public var offset: Double

    public init(startbit: Int, bitsize: Int, endian: Endian, sign: Sign, scale: Double, offset: Double) {
        self.startbit = startbit
        self.bitsize = bitsize
        self.endian = endian
        self.sign = sign
        self.scale = scale
        self.offset = offset
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case startbit
        case bitsize
        case endian
        case sign
        case scale
        case offset
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(startbit, forKey: .startbit)
        try container.encode(bitsize, forKey: .bitsize)
        try container.encode(endian, forKey: .endian)
        try container.encode(sign, forKey: .sign)
        try container.encode(scale, forKey: .scale)
        try container.encode(offset, forKey: .offset)
    }
}

