//
// Jpeg.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct Jpeg: Codable {

    /** JPEGのUUID */
    public var uuid: UUID
    /** 計測開始からのオフセット（マイクロ秒） */
    public var startOffset: Int
    /** 長さ（マイクロ秒） */
    public var duration: Int
    /** 指定された時間範囲のみを抽出したものである場合は `true` 。 */
    public var trimmed: Bool
    /** フレームレート（fps） */
    public var fps: Float
    public var quality: JpegQuality
    public var status: JpegStatus
    /** 作成された日時 */
    public var createdAt: Date
    /** 最終更新日時 */
    public var updatedAt: Date

    public init(uuid: UUID, startOffset: Int, duration: Int, trimmed: Bool, fps: Float, quality: JpegQuality, status: JpegStatus, createdAt: Date, updatedAt: Date) {
        self.uuid = uuid
        self.startOffset = startOffset
        self.duration = duration
        self.trimmed = trimmed
        self.fps = fps
        self.quality = quality
        self.status = status
        self.createdAt = createdAt
        self.updatedAt = updatedAt
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case uuid
        case startOffset = "start_offset"
        case duration
        case trimmed
        case fps
        case quality
        case status
        case createdAt = "created_at"
        case updatedAt = "updated_at"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(uuid, forKey: .uuid)
        try container.encode(startOffset, forKey: .startOffset)
        try container.encode(duration, forKey: .duration)
        try container.encode(trimmed, forKey: .trimmed)
        try container.encode(fps, forKey: .fps)
        try container.encode(quality, forKey: .quality)
        try container.encode(status, forKey: .status)
        try container.encode(createdAt, forKey: .createdAt)
        try container.encode(updatedAt, forKey: .updatedAt)
    }
}

