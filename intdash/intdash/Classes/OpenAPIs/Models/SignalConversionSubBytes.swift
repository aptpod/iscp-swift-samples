//
// SignalConversionSubBytes.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct SignalConversionSubBytes: Codable {

    public var type: SignalConversionOptionType
    public var options: SignalConversionOptionSubBytes

    public init(type: SignalConversionOptionType, options: SignalConversionOptionSubBytes) {
        self.type = type
        self.options = options
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case type
        case options
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(type, forKey: .type)
        try container.encode(options, forKey: .options)
    }
}

